# AUTOGENERATED! DO NOT EDIT! File to edit: 02A_user_profile.ipynb (unless otherwise specified).

__all__ = ['imp_mean', 'imp_med', 'load_directory_files_dict', 'add_prefix_columns', 'shorten_columns_str']

# Cell
#exports
import pandas as pd
import numpy as np
import os
from zipfile import ZipFile
from scipy import spatial
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import seaborn as sns; sns.set_theme()
from collections import defaultdict

from tsfresh import extract_features
from tsfresh.feature_selection.relevance import calculate_relevance_table
import tsfresh

# Cell

#exports
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import ExtraTreesClassifier, ExtraTreesRegressor, RandomForestClassifier, RandomForestRegressor

from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score
from sklearn.inspection import plot_partial_dependence, permutation_importance
from sklearn.impute import SimpleImputer
imp_mean = SimpleImputer(missing_values=np.nan, strategy='mean')
imp_med = SimpleImputer(missing_values=np.nan, strategy='median')
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import balanced_accuracy_score, accuracy_score, classification_report
from sklearn import tree
import networkx as nx

# Cell
import shap
# load JS visualization code to notebook
shap.initjs()

# Cell
def load_directory_files_dict(dir_path)->dict:
    'Load all pkl files in the directory into dict'
    L1file_list = os.listdir(path_load)
    L1file_list = [i for i in L1file_list if not i.startswith(".")]
    L1name_list = [i.split("_")[0]+"_"+i.split("_")[1].replace(".pkl","") for i in L1file_list]

    dt = {}
    for name, key in zip(L1file_list, L1name_list):
        dt[key] = pd.read_pickle(os.path.join(path_load,name))
    return dt

def add_prefix_columns(dt:pd.DataFrame, columns_ignore:list, prefix:str)->pd.DataFrame:
    'Add prefix for columns to mark its origin'
    dt.columns = [i if i in idx_columns else prefix+i for i in dt.columns]
    return dt

def shorten_columns_str(input_list:list):
    'Cleaner column name for plotting later'
    return [
        i.replace("absolute_sum_of_changes","abs_changes_sum")
        .replace("linear_trend__attr_\"slope\"","linear_slope")
        .replace("year","yr")
        .replace("month","mnt")
        .replace("linear_trend__attr_\"intercept\"","linear_inter")
        .replace("maximum","max")
        .replace("minimum","min")
        .replace("sum_values","sum")
        .replace("benford_correlation","outliers")
        .replace("voice_outgoing", "voice_out")
        .replace("data_download","data_down")
        for i in input_list
    ]

